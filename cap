#!/usr/bin/env bash

########################
#### MAGIC COMMANDS ####
########################

cp="cp -f --preserve --strip-trailing-slashes"

########################
### GLOBAL VARIABLES ###
########################

savepoint="/tmp/cap-savepoint-$(whoami).txt"
lines=$(wc -l < "$savepoint")


if ! [ -f "$savepoint" ]; then
    if ! touch "$savepoint"; then
        echo 'Could not create save file.'
        echo 'Exiting...'
        exit 1
    fi
else
    sed -i '/^$/d' "$savepoint"
fi

exit-if-list-empty() {
    if [ "$lines" -lt 1 ]; then
        echo 'List is empty.'
        exit 0
    fi
}

copy() {
    for item in $(realpath $1); do
        if [ -e "$item" ] && ! grep -q  "$item" "$savepoint" ; then
            echo "$item" >> "$savepoint"
        fi
    done
}

paste() {
    exit-if-list-empty
    
    local position="$1"
    position=$(((lines + 1) - position))

    local item="$(sed -n "${position}p" "$savepoint")"

    if [ -f "$item" ]; then
        $cp "$item" "$(pwd)"

    elif [ -d "$item" ]; then
        $cp -r "$item" "$(pwd)"

    else
        echo "Ignoring $item..."
    fi

    if ! [ "$ALL" = 'y' ]; then
        sed -i "${position}d" "$savepoint"
        echo "$item" >> "$savepoint"
    fi
}

paste-range() {
    exit-if-list-empty
    
    local start=$(echo "$1" | awk -F- '{print $1}')
    local end=$(echo "$1" | awk -F- '{print $2}')

    if [ "$start" -gt 0 ] && [ "$end" -le "$lines" ] && [ "$start" -le "$end" ]; then
        while [ "$end" -ge "$start" ]; do
            paste "$start" 
            start=$((start + 1))
        done
    fi
}

delete() {
    exit-if-list-empty

    local position="$1"

    if [ -z "$position" ]; then
        echo "Expected an index between 1-$lines, got ($position)"
        exit 1
    fi

    position=$(((lines + 1) - position))
    sed -i "${position}d" "$savepoint"
}

delete-range() {
    exit-if-list-empty

    local start=$(echo "$1" | awk -F- '{print $1}')
    local end=$(echo "$1" | awk -F- '{print $2}')

    if [ "$start" -gt 0 ] && [ "$end" -le "$lines" ] && [ "$start" -le "$end" ]; then
        start=$(((lines + 1) - start))
        end=$(((lines + 1) - end))

        sed -i "${end},${start}d" "$savepoint"
    fi
}

list-items() {
    exit-if-list-empty

    local i="$(wc -l < "$savepoint")" 
    
    for item in $(cat "$savepoint"); do
        echo "$i $item"
        i=$((i - 1))
    done
}


clear-list() {
    echo "" > "$savepoint"
}

usage() {
    echo "Usage: cap [OPTION] [FILE...]"
    echo
    echo "Flag any files and directories and paste in current working directory."
    echo
    echo "Options:"
    echo
    echo " -l, --list           list all flagged"
    echo " -a, --all            paste all flagged"
    echo " -p [INDEX|RANGE]     paste recently flagged, a specific item in the list or all items within a range"
    echo " -d [INDEX|RANGE]     unflag recently flagged, a specific item from the list or all items within a range"
    echo " -C, --clear          clear all flagged"
    echo " -h, --help           print this manual"
    echo
    echo "Examples:"
    echo
    echo " cap *                flag everything in current directory for copy"
    echo " cap -p               paste most recently flagged"
    echo " cap -p 5             paste the 5th entry in the list"
    echo " cap -p 7-9           paste all items from the 7th to 9th (inclusive) index"
    echo " cap --all            paste all flagged files and directories"
    echo " cap -d 7-            unflag all items from the 7th index and higher (inclusive)"
}

version() {
    echo 'cap 1.5.0'
}

options=$(getopt -n "cap" -o ald::p::hC --long all,clear,list,help,version -- "$@")
eval set -- "$options"
while :; do
    case $1 in
    -a|--all)
        ALL=y
        paste-range "1-$lines"
        exit 0
        ;;
	-l|--list)
        list-items
        exit 0
	    ;;
    -d)
        shift
        if echo "$3" | grep -qE '^[0-9]+\-[0-9]+$'; then
            delete-range "$3"
        elif echo "$3" | grep -qE '^([0-9]+\-)$'; then
            delete-range "$3$lines"
        elif echo "$3" | grep -qE '^[0-9]+$'; then
            delete "$3"
        else
            delete 1
        fi
        exit 0
        ;;
	-p)
        shift
        if echo "$3" | grep -qE '^[0-9]+\-[0-9]+$'; then
            paste-range "$3"
        elif echo "$3" | grep -qE '^([0-9]+\-)$'; then
            paste-range "$3$lines"
        elif echo "$3" | grep -qE '^[0-9]+$'; then
            paste "$3"
        else
            paste 1
        fi
        exit 0
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
    -C|--clear)
        clear-list
        exit 0
        ;;
    --version)
        version
        exit 0
        ;;
    --)
        if [ -z "$*" ]; then
            paste "1"
        else
            copy "$*"
        fi
        exit 0
        ;;
	*)
	    printf "Unknown option: (%s).\n" "$1"
        usage
        exit 1
	    ;;
    esac
done
eval set -- "$@"
